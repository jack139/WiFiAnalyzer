/*
 * WiFiAnalyzer
 * Copyright (C) 2015 - 2024 VREM Software Development <VREMSoftwareDevelopment@gmail.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>
 */

// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext {
        kotlin_version = '1.9.22'
    }
    repositories {
        maven { url "https://www.jitpack.io"}
        maven { url "https://maven.aliyun.com/repository/releases"}
        maven { url "https://maven.aliyun.com/repository/google"}
        maven { url "https://maven.aliyun.com/repository/central"}
        maven { url "https://maven.aliyun.com/repository/gradle-plugin"}
        maven { url "https://maven.aliyun.com/repository/public"}
        google()
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:8.2.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlin_version"
    }
}

allprojects {
    repositories {
        maven { url "https://www.jitpack.io"}
        maven { url "https://maven.aliyun.com/repository/releases"}
        maven { url "https://maven.aliyun.com/repository/google"}
        maven { url "https://maven.aliyun.com/repository/central"}
        maven { url "https://maven.aliyun.com/repository/gradle-plugin"}
        maven { url "https://maven.aliyun.com/repository/public"}
        google()
        maven { url 'https://maven.google.com' }
        mavenCentral()
    }
    tasks.withType(JavaCompile).tap {
        configureEach {
            options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
        }
    }
}

tasks.register('clean', Delete) {
    delete rootProject.buildDir
}
